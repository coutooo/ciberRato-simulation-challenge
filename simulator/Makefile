#############################################################################
# Makefile for building: simulator
# Generated by qmake (2.01a) (Qt 4.8.7) on: sex Nov 12 17:47:33 2021
# Project:  simulator.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile simulator.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lpthread -lQtXml -lQtGui -lQtNetwork -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = cbactionhandler.cpp \
		cbbeacon.cpp \
		cbbutton.cpp \
		cbclient.cpp \
		cbgrid.cpp \
		cbgridhandler.cpp \
		cblab.cpp \
		cblabhandler.cpp \
		cbmotor.cpp \
		cbpanel.cpp \
		cbparameters.cpp \
		cbparamhandler.cpp \
		cbpoint.cpp \
		cbposition.cpp \
		cbreceptionhandler.cpp \
		cbreceptionist.cpp \
		cbrobot.cpp \
		cbrobotaction.cpp \
		cbsensor.cpp \
		cbsimulator.cpp \
		cbtarget.cpp \
		cbview.cpp \
		cbviewhandler.cpp \
		cbwall.cpp \
		simulator.cpp \
		cbgraph.cpp \
		cbrobotbeacon.cpp \
		cbutils.cpp \
		cbparamdialog.cpp \
		cbsimulatorGUI.cpp \
		cbcontrolpanel.cpp \
		cbmanagerobots.cpp \
		cbrobotinfo.cpp \
		cblabdialog.cpp moc_cbrobot.cpp \
		moc_cbsimulator.cpp \
		moc_cbparamdialog.cpp \
		moc_cbsimulatorGUI.cpp \
		moc_cbcontrolpanel.cpp \
		moc_cbmanagerobots.cpp \
		moc_cbrobotinfo.cpp \
		moc_cblabdialog.cpp \
		qrc_default.cpp
OBJECTS       = cbactionhandler.o \
		cbbeacon.o \
		cbbutton.o \
		cbclient.o \
		cbgrid.o \
		cbgridhandler.o \
		cblab.o \
		cblabhandler.o \
		cbmotor.o \
		cbpanel.o \
		cbparameters.o \
		cbparamhandler.o \
		cbpoint.o \
		cbposition.o \
		cbreceptionhandler.o \
		cbreceptionist.o \
		cbrobot.o \
		cbrobotaction.o \
		cbsensor.o \
		cbsimulator.o \
		cbtarget.o \
		cbview.o \
		cbviewhandler.o \
		cbwall.o \
		simulator.o \
		cbgraph.o \
		cbrobotbeacon.o \
		cbutils.o \
		cbparamdialog.o \
		cbsimulatorGUI.o \
		cbcontrolpanel.o \
		cbmanagerobots.o \
		cbrobotinfo.o \
		cblabdialog.o \
		moc_cbrobot.o \
		moc_cbsimulator.o \
		moc_cbparamdialog.o \
		moc_cbsimulatorGUI.o \
		moc_cbcontrolpanel.o \
		moc_cbmanagerobots.o \
		moc_cbrobotinfo.o \
		moc_cblabdialog.o \
		qrc_default.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		simulator.pro
QMAKE_TARGET  = simulator
DESTDIR       = 
TARGET        = simulator

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_cbsimulatorGUI.h ui_cbcontrolpanel.h ui_cbmanagerobots.h ui_cbparamdialogbase.h ui_cbrobotinfo.h ui_cblabdialog.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: simulator.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile simulator.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile simulator.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/simulator1.0.0 || $(MKDIR) .tmp/simulator1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/simulator1.0.0/ && $(COPY_FILE) --parents cbactionhandler.h cbbeacon.h cbbutton.h cbclient.h cbgrid.h cbgridhandler.h cblab.h cblabhandler.h cbmotor.h cbpanel.h cbparameters.h cbparamhandler.h cbpoint.h cbposition.h cbreceptionform.h cbreceptionhandler.h cbreceptionist.h cbrobot.h cbrobotaction.h cbsensor.h cbsimulator.h cbtarget.h cbview.h cbviewcommand.h cbviewhandler.h cbwall.h cbgraph.h cbrobotbeacon.h cbutils.h cbparamdialog.h cbsimulatorGUI.h cbcontrolpanel.h cbmanagerobots.h cbrobotinfo.h cblabdialog.h .tmp/simulator1.0.0/ && $(COPY_FILE) --parents default.qrc .tmp/simulator1.0.0/ && $(COPY_FILE) --parents cbactionhandler.cpp cbbeacon.cpp cbbutton.cpp cbclient.cpp cbgrid.cpp cbgridhandler.cpp cblab.cpp cblabhandler.cpp cbmotor.cpp cbpanel.cpp cbparameters.cpp cbparamhandler.cpp cbpoint.cpp cbposition.cpp cbreceptionhandler.cpp cbreceptionist.cpp cbrobot.cpp cbrobotaction.cpp cbsensor.cpp cbsimulator.cpp cbtarget.cpp cbview.cpp cbviewhandler.cpp cbwall.cpp simulator.cpp cbgraph.cpp cbrobotbeacon.cpp cbutils.cpp cbparamdialog.cpp cbsimulatorGUI.cpp cbcontrolpanel.cpp cbmanagerobots.cpp cbrobotinfo.cpp cblabdialog.cpp .tmp/simulator1.0.0/ && $(COPY_FILE) --parents cbsimulatorGUI.ui cbcontrolpanel.ui cbmanagerobots.ui cbparamdialogbase.ui cbrobotinfo.ui cblabdialog.ui .tmp/simulator1.0.0/ && (cd `dirname .tmp/simulator1.0.0` && $(TAR) simulator1.0.0.tar simulator1.0.0 && $(COMPRESS) simulator1.0.0.tar) && $(MOVE) `dirname .tmp/simulator1.0.0`/simulator1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/simulator1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cbrobot.cpp moc_cbsimulator.cpp moc_cbparamdialog.cpp moc_cbsimulatorGUI.cpp moc_cbcontrolpanel.cpp moc_cbmanagerobots.cpp moc_cbrobotinfo.cpp moc_cblabdialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cbrobot.cpp moc_cbsimulator.cpp moc_cbparamdialog.cpp moc_cbsimulatorGUI.cpp moc_cbcontrolpanel.cpp moc_cbmanagerobots.cpp moc_cbrobotinfo.cpp moc_cblabdialog.cpp
moc_cbrobot.cpp: cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbrobot.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbrobot.h -o moc_cbrobot.cpp

moc_cbsimulator.cpp: cbsimulatorGUI.h \
		cbsimulator.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbsimulator.h -o moc_cbsimulator.cpp

moc_cbparamdialog.cpp: ui_cbparamdialogbase.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbparameters.h \
		cbparamdialog.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbparamdialog.h -o moc_cbparamdialog.cpp

moc_cbsimulatorGUI.cpp: cbsimulatorGUI.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbsimulatorGUI.h -o moc_cbsimulatorGUI.cpp

moc_cbcontrolpanel.cpp: cbcontrolpanel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbcontrolpanel.h -o moc_cbcontrolpanel.cpp

moc_cbmanagerobots.cpp: cbmanagerobots.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbmanagerobots.h -o moc_cbmanagerobots.cpp

moc_cbrobotinfo.cpp: cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbrobotinfo.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cbrobotinfo.h -o moc_cbrobotinfo.cpp

moc_cblabdialog.cpp: cblabdialog.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cblabdialog.h -o moc_cblabdialog.cpp

compiler_rcc_make_all: qrc_default.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_default.cpp
qrc_default.cpp: default.qrc \
		skins/default/icons/edit_add.png \
		skins/default/icons/hourglass.png \
		skins/default/icons/Gnome-Preferences-System-Windows-32.png \
		skins/default/icons/sound.png \
		skins/default/icons/collisions_off.png \
		skins/default/icons/disconnect.png \
		skins/default/icons/hourglass_delete.png \
		skins/default/icons/edit_remove.png \
		skins/default/icons/brick_wall.png \
		skins/default/icons/sound_mute.png \
		skins/default/icons/Gnome-Emblem-Default-32.png \
		skins/default/icons/mouse_32.png \
		skins/default/icons/stock_lock_open.png \
		skins/default/icons/Gnome-Preferences-System-32.png \
		skins/default/icons/preferences_desktop_theme.png \
		skins/default/icons/Gnome-Folder-Open-32.png \
		skins/default/icons/Gnome-Media-Floppy-32.png \
		skins/default/icons/Gnome-Application-Exit-32.png \
		skins/default/icons/brick_wall_low.png \
		skins/default/icons/stock_lock.png \
		skins/default/icons/lab.png \
		skins/default/icons/connect.png \
		skins/default/icons/collisions_on.png \
		skins/default/stop.png \
		skins/default/remove.png \
		skins/default/icons/Gnome-System-Shutdown-32.png \
		skins/default/start.png \
		skins/default/rob1/robr.png \
		skins/default/rob1/rob.png \
		skins/default/rob1/robc.png \
		skins/default/rob5/robr.png \
		skins/default/rob5/rob.png \
		skins/default/rob5/robc.png \
		skins/default/rob4/robr.png \
		skins/default/rob4/rob.png \
		skins/default/rob4/robc.png \
		skins/default/rob3/robr.png \
		skins/default/rob3/rob.png \
		skins/default/rob3/robc.png \
		skins/default/states/stopped.png \
		skins/default/states/removed.png \
		skins/default/states/waiting.png \
		skins/default/states/finished.png \
		skins/default/states/returning.png \
		skins/default/states/running.png \
		skins/default/rob2/robr.png \
		skins/default/rob2/rob.png \
		skins/default/rob2/robc.png \
		skins/default/bg2/bg0000.png \
		skins/default/bg1/bg0000.png \
		skins/default/icons/Gnome-Emblem-Mail-32.png \
		skins/default/beacon.png \
		skins/default/icons/games_highscores.png \
		sounds/begin.wav \
		sounds/finished.wav \
		sounds/first.wav \
		sounds/collision.wav
	/usr/lib/x86_64-linux-gnu/qt4/bin/rcc -name default default.qrc -o qrc_default.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_cbsimulatorGUI.h ui_cbcontrolpanel.h ui_cbmanagerobots.h ui_cbparamdialogbase.h ui_cbrobotinfo.h ui_cblabdialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_cbsimulatorGUI.h ui_cbcontrolpanel.h ui_cbmanagerobots.h ui_cbparamdialogbase.h ui_cbrobotinfo.h ui_cblabdialog.h
ui_cbsimulatorGUI.h: cbsimulatorGUI.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cbsimulatorGUI.ui -o ui_cbsimulatorGUI.h

ui_cbcontrolpanel.h: cbcontrolpanel.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cbcontrolpanel.ui -o ui_cbcontrolpanel.h

ui_cbmanagerobots.h: cbmanagerobots.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cbmanagerobots.ui -o ui_cbmanagerobots.h

ui_cbparamdialogbase.h: cbparamdialogbase.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cbparamdialogbase.ui -o ui_cbparamdialogbase.h

ui_cbrobotinfo.h: cbrobotinfo.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cbrobotinfo.ui -o ui_cbrobotinfo.h

ui_cblabdialog.h: cblabdialog.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic cblabdialog.ui -o ui_cblabdialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

cbactionhandler.o: cbactionhandler.cpp cbactionhandler.h \
		cbrobotaction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbactionhandler.o cbactionhandler.cpp

cbbeacon.o: cbbeacon.cpp cbbeacon.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbbeacon.o cbbeacon.cpp

cbbutton.o: cbbutton.cpp cbbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbbutton.o cbbutton.cpp

cbclient.o: cbclient.cpp cbclient.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbclient.o cbclient.cpp

cbgrid.o: cbgrid.cpp cbgrid.h \
		cbposition.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbgrid.o cbgrid.cpp

cbgridhandler.o: cbgridhandler.cpp cbgridhandler.h \
		cbposition.h \
		cbpoint.h \
		cbgrid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbgridhandler.o cbgridhandler.cpp

cblab.o: cblab.cpp cbbeacon.h \
		cbpoint.h \
		cbtarget.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cblab.h \
		cbwall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblab.o cblab.cpp

cblabhandler.o: cblabhandler.cpp cblabhandler.h \
		cbpoint.h \
		cbwall.h \
		cbbeacon.h \
		cbtarget.h \
		cblab.h \
		cbsimulator.h \
		cbsimulatorGUI.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblabhandler.o cblabhandler.cpp

cbmotor.o: cbmotor.cpp cbutils.h \
		cbmotor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbmotor.o cbmotor.cpp

cbpanel.o: cbpanel.cpp cbpanel.h \
		cbclient.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbpanel.o cbpanel.cpp

cbparameters.o: cbparameters.cpp cbparameters.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbpoint.h \
		cbrobot.h \
		cbclient.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbparameters.o cbparameters.cpp

cbparamhandler.o: cbparamhandler.cpp cbparamhandler.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbparamhandler.o cbparamhandler.cpp

cbpoint.o: cbpoint.cpp cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbpoint.o cbpoint.cpp

cbposition.o: cbposition.cpp cbposition.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbposition.o cbposition.cpp

cbreceptionhandler.o: cbreceptionhandler.cpp cbreceptionhandler.h \
		cbview.h \
		cbclient.h \
		cbparameters.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbpanel.h \
		cbrobot.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbrobotbeacon.h \
		cbbeacon.h \
		netif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbreceptionhandler.o cbreceptionhandler.cpp

cbreceptionist.o: cbreceptionist.cpp cbreceptionist.h \
		cbreceptionform.h \
		cbreceptionhandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbreceptionist.o cbreceptionist.cpp

cbrobot.o: cbrobot.cpp cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbtarget.h \
		cblab.h \
		cbwall.h \
		cbbeacon.h \
		cbgraph.h \
		netif.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbrobot.o cbrobot.cpp

cbrobotaction.o: cbrobotaction.cpp cbrobotaction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbrobotaction.o cbrobotaction.cpp

cbsensor.o: cbsensor.cpp cbutils.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbpoint.h \
		cbbeacon.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbmotor.h \
		cblab.h \
		cbwall.h \
		cbtarget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbsensor.o cbsensor.cpp

cbsimulator.o: cbsimulator.cpp cbposition.h \
		cbpoint.h \
		cbparameters.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbreceptionist.h \
		cbview.h \
		cbclient.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbpanel.h \
		cbrobot.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbrobotbeacon.h \
		cbgrid.h \
		cbgraph.h \
		cbutils.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbparamhandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbsimulator.o cbsimulator.cpp

cbtarget.o: cbtarget.cpp cbtarget.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbtarget.o cbtarget.cpp

cbview.o: cbview.cpp cbview.h \
		cbclient.h \
		cbparameters.h \
		cbviewhandler.h \
		cbviewcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbview.o cbview.cpp

cbviewhandler.o: cbviewhandler.cpp cbviewhandler.h \
		cbviewcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbviewhandler.o cbviewhandler.cpp

cbwall.o: cbwall.cpp cbwall.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbwall.o cbwall.cpp

simulator.o: simulator.cpp cbsimulator.h \
		cbsimulatorGUI.h \
		cblab.h \
		cbwall.h \
		cbpoint.h \
		cbtarget.h \
		cbbeacon.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbposition.h \
		cbgrid.h \
		cbparamhandler.h \
		cbparameters.h \
		cbreceptionist.h \
		cbmotor.h \
		cbsensor.h \
		cbrobot.h \
		cbclient.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbutils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simulator.o simulator.cpp

cbgraph.o: cbgraph.cpp cbpoint.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbgraph.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbgraph.o cbgraph.cpp

cbrobotbeacon.o: cbrobotbeacon.cpp cbrobotbeacon.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbbeacon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbrobotbeacon.o cbrobotbeacon.cpp

cbutils.o: cbutils.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbutils.o cbutils.cpp

cbparamdialog.o: cbparamdialog.cpp cbparamdialog.h \
		ui_cbparamdialogbase.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbparamdialog.o cbparamdialog.cpp

cbsimulatorGUI.o: cbsimulatorGUI.cpp cbsimulatorGUI.h \
		ui_cbsimulatorGUI.h \
		cbsimulator.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbparamdialog.h \
		ui_cbparamdialogbase.h \
		cbcontrolpanel.h \
		cbmanagerobots.h \
		cblabdialog.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbrobotinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbsimulatorGUI.o cbsimulatorGUI.cpp

cbcontrolpanel.o: cbcontrolpanel.cpp cbcontrolpanel.h \
		ui_cbcontrolpanel.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbmanagerobots.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbcontrolpanel.o cbcontrolpanel.cpp

cbmanagerobots.o: cbmanagerobots.cpp cbmanagerobots.h \
		ui_cbmanagerobots.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbmanagerobots.o cbmanagerobots.cpp

cbrobotinfo.o: cbrobotinfo.cpp cbrobotinfo.h \
		cbrobot.h \
		cbclient.h \
		cbparameters.h \
		cbactionhandler.h \
		cbrobotaction.h \
		cbposition.h \
		cbpoint.h \
		cbmotor.h \
		cbsensor.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		ui_cbrobotinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbrobotinfo.o cbrobotinfo.cpp

cblabdialog.o: cblabdialog.cpp cblabdialog.h \
		ui_cblabdialog.h \
		cbsimulator.h \
		cbsimulatorGUI.h \
		cblab.h \
		cbwall.h \
		cbpoint.h \
		cbtarget.h \
		cbbeacon.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbposition.h \
		cbgrid.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblabdialog.o cblabdialog.cpp

moc_cbrobot.o: moc_cbrobot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbrobot.o moc_cbrobot.cpp

moc_cbsimulator.o: moc_cbsimulator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbsimulator.o moc_cbsimulator.cpp

moc_cbparamdialog.o: moc_cbparamdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbparamdialog.o moc_cbparamdialog.cpp

moc_cbsimulatorGUI.o: moc_cbsimulatorGUI.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbsimulatorGUI.o moc_cbsimulatorGUI.cpp

moc_cbcontrolpanel.o: moc_cbcontrolpanel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbcontrolpanel.o moc_cbcontrolpanel.cpp

moc_cbmanagerobots.o: moc_cbmanagerobots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbmanagerobots.o moc_cbmanagerobots.cpp

moc_cbrobotinfo.o: moc_cbrobotinfo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cbrobotinfo.o moc_cbrobotinfo.cpp

moc_cblabdialog.o: moc_cblabdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cblabdialog.o moc_cblabdialog.cpp

qrc_default.o: qrc_default.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_default.o qrc_default.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

