#############################################################################
# Makefile for building: simulator
# Generated by qmake (1.06c) (Qt 3.2.3) on: Thu Mar 24 13:15:37 2005
# Project:  simulator.pro
# Template: app
# Command: $(QMAKE) -o Makefile simulator.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -static -pipe -Wall -W -g -fomit-frame-pointer -pipe -march=i386 -mcpu=pentium -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -static -pipe -Wall -W -g -fomit-frame-pointer -pipe -march=i386 -mcpu=pentium -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/default -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = -static  
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lm -lpthread  -lSM -lICE -lXft -lXext -lXcursor -lXrender -lXrandr -lXinerama -lX11 -lFS -lfontconfig -lexpat -lfreetype -ldl
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = cbactionhandler.h \
		cbbeacon.h \
		cbbutton.h \
		cbclient.h \
		cbgrid.h \
		cbgridhandler.h \
		cblab.h \
		cblabhandler.h \
		cbmotor.h \
		cbpanel.h \
		cbparameters.h \
		cbparamhandler.h \
		cbpoint.h \
		cbposition.h \
		cbreceptionform.h \
		cbreceptionhandler.h \
		cbreceptionist.h \
		cbrobot.h \
		cbrobotbeacon.h \
		cbrobotaction.h \
		cbsensor.h \
		cbsimulator.h \
		cbtarget.h \
		cbview.h \
		cbviewcommand.h \
		cbviewhandler.h \
		cbwall.h \
		cbgraph.h \
		cbutils.h \
		cbsimulatorGUI.h \
		cbparamdialog.h
SOURCES = cbactionhandler.cpp \
		cbbeacon.cpp \
		cbbutton.cpp \
		cbclient.cpp \
		cbgrid.cpp \
		cbgridhandler.cpp \
		cblab.cpp \
		cblabhandler.cpp \
		cbmotor.cpp \
		cbpanel.cpp \
		cbparameters.cpp \
		cbparamhandler.cpp \
		cbpoint.cpp \
		cbposition.cpp \
		cbreceptionhandler.cpp \
		cbreceptionist.cpp \
		cbrobot.cpp \
		cbrobotbeacon.cpp \
		cbrobotaction.cpp \
		cbsensor.cpp \
		cbsimulator.cpp \
		cbtarget.cpp \
		cbview.cpp \
		cbviewhandler.cpp \
		cbwall.cpp \
		simulator.cpp \
		cbgraph.cpp \
		cbutils.cpp \
		cbsimulatorGUI.cpp \
		cbparamdialog.cpp
OBJECTS = cbactionhandler.o \
		cbbeacon.o \
		cbbutton.o \
		cbclient.o \
		cbgrid.o \
		cbgridhandler.o \
		cblab.o \
		cblabhandler.o \
		cbmotor.o \
		cbpanel.o \
		cbparameters.o \
		cbparamhandler.o \
		cbpoint.o \
		cbposition.o \
		cbreceptionhandler.o \
		cbreceptionist.o \
		cbrobot.o \
		cbrobotbeacon.o \
		cbrobotaction.o \
		cbsensor.o \
		cbsimulator.o \
		cbtarget.o \
		cbview.o \
		cbviewhandler.o \
		cbwall.o \
		simulator.o \
		cbgraph.o \
		cbutils.o \
		cbsimulatorGUI.o \
		cbparamdialog.o \
		cbparamdialogbase.o
FORMS = cbparamdialogbase.ui
UICDECLS = cbparamdialogbase.h
UICIMPLS = cbparamdialogbase.cpp
SRCMOC   = moc_cbsimulator.cpp \
		moc_cbsimulatorGUI.cpp \
		moc_cbparamdialog.cpp \
		moc_cbparamdialogbase.cpp
OBJMOC = moc_cbsimulator.o \
		moc_cbsimulatorGUI.o \
		moc_cbparamdialog.o \
		moc_cbparamdialogbase.o
DIST	   = simulator.pro
QMAKE_TARGET = simulator
DESTDIR  = 
TARGET   = simulator

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: simulator.pro  /usr/lib/qt3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile simulator.pro
qmake: 
	@$(QMAKE) -o Makefile simulator.pro

dist: 
	@mkdir -p .tmp/simulator && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/simulator/ && ( cd `dirname .tmp/simulator` && $(TAR) simulator.tar simulator && $(GZIP) simulator.tar ) && $(MOVE) `dirname .tmp/simulator`/simulator.tar.gz . && $(DEL_FILE) -r .tmp/simulator

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

cbactionhandler.o: cbactionhandler.cpp cbactionhandler.h \
		cbrobotaction.h

cbbeacon.o: cbbeacon.cpp cbbeacon.h \
		cbpoint.h

cbbutton.o: cbbutton.cpp cbbutton.h

cbclient.o: cbclient.cpp cbclient.h \
		cbparameters.h

cbgrid.o: cbgrid.cpp cbgrid.h \
		cbposition.h \
		cbpoint.h

cbgridhandler.o: cbgridhandler.cpp cbgridhandler.h \
		cbgrid.h \
		cbposition.h \
		cbpoint.h

cblab.o: cblab.cpp cbbeacon.h \
		cbtarget.h \
		cbrobot.h \
		cblab.h \
		cbpoint.h \
		cbclient.h \
		cbactionhandler.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbparameters.h \
		cbrobotaction.h \
		cbwall.h

cblabhandler.o: cblabhandler.cpp cblabhandler.h \
		cbpoint.h \
		cbwall.h \
		cbbeacon.h \
		cbtarget.h \
		cblab.h \
		cbsimulator.h \
		cbsimulatorGUI.h

cbmotor.o: cbmotor.cpp cbutils.h \
		cbmotor.h

cbpanel.o: cbpanel.cpp cbpanel.h \
		cbclient.h \
		cbparameters.h

cbparameters.o: cbparameters.cpp cbparameters.h

cbparamhandler.o: cbparamhandler.cpp cbparamhandler.h \
		cbparameters.h

cbpoint.o: cbpoint.cpp cbpoint.h

cbposition.o: cbposition.cpp cbposition.h \
		cbpoint.h

cbreceptionhandler.o: cbreceptionhandler.cpp cbreceptionhandler.h \
		cbview.h \
		cbpanel.h \
		cbrobot.h \
		netif.h \
		cbclient.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbparameters.h \
		cbactionhandler.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbrobotaction.h \
		cbpoint.h

cbreceptionist.o: cbreceptionist.cpp cbreceptionist.h \
		cbreceptionform.h \
		cbreceptionhandler.h

cbrobot.o: cbrobot.cpp cbrobot.h \
		cbsensor.h \
		cbtarget.h \
		cbsimulator.h \
		cblab.h \
		cbgraph.h \
		netif.h \
		cbclient.h \
		cbactionhandler.h \
		cbposition.h \
		cbmotor.h \
		cbparameters.h \
		cbrobotaction.h \
		cbpoint.h \
		cbsimulatorGUI.h \
		cbwall.h \
		cbbeacon.h

cbrobotaction.o: cbrobotaction.cpp cbrobotaction.h

cbsensor.o: cbsensor.cpp cbutils.h \
		cbsensor.h \
		cbpoint.h

cbsimulator.o: cbsimulator.cpp cbposition.h \
		cbparameters.h \
		cblab.h \
		cbreceptionist.h \
		cbview.h \
		cbpanel.h \
		cbrobot.h \
		cbgrid.h \
		cbgraph.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbparamhandler.h \
		cbsimulator.h \
		cbpoint.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbclient.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbactionhandler.h \
		cbmotor.h \
		cbsensor.h \
		cbrobotaction.h \
		cbsimulatorGUI.h

cbtarget.o: cbtarget.cpp cbtarget.h \
		cbpoint.h

cbview.o: cbview.cpp cbview.h \
		cbclient.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbparameters.h

cbviewhandler.o: cbviewhandler.cpp cbviewhandler.h \
		cbviewcommand.h

cbwall.o: cbwall.cpp cbwall.h \
		cbpoint.h

simulator.o: simulator.cpp cbsimulator.h \
		cblab.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbparamhandler.h \
		cbreceptionist.h \
		cbgrid.h \
		cbmotor.h \
		cbsensor.h \
		cbrobot.h \
		cbsimulatorGUI.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbpoint.h \
		cbposition.h \
		cbparameters.h \
		cbclient.h \
		cbactionhandler.h \
		cbrobotaction.h

cbgraph.o: cbgraph.cpp cbpoint.h \
		cblab.h \
		cbrobot.h \
		cbgraph.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbclient.h \
		cbactionhandler.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbparameters.h \
		cbrobotaction.h

cbutils.o: cbutils.cpp 

cbsimulatorGUI.o: cbsimulatorGUI.cpp cbsimulator.h \
		cbrobot.h \
		cbparamdialog.h \
		cbsimulatorGUI.h \
		cbclient.h \
		cbactionhandler.h \
		cbposition.h \
		cbmotor.h \
		cbsensor.h \
		cbparameters.h \
		cbrobotaction.h \
		cbpoint.h \
		cbparamdialogbase.h

cbparamdialog.o: cbparamdialog.cpp cbparamdialog.h \
		cbparameters.h \
		cbparamdialogbase.h

cbparamdialogbase.h: cbparamdialogbase.ui 
	$(UIC) cbparamdialogbase.ui -o cbparamdialogbase.h

cbparamdialogbase.cpp: cbparamdialogbase.h cbparamdialogbase.ui 
	$(UIC) cbparamdialogbase.ui -i cbparamdialogbase.h -o cbparamdialogbase.cpp

cbparamdialogbase.o: cbparamdialogbase.cpp cbparamdialogbase.h

moc_cbsimulator.o: moc_cbsimulator.cpp cbsimulator.h cbsimulatorGUI.h

moc_cbsimulatorGUI.o: moc_cbsimulatorGUI.cpp cbsimulatorGUI.h 

moc_cbparamdialog.o: moc_cbparamdialog.cpp cbparamdialog.h cbparamdialogbase.h

moc_cbparamdialogbase.o: moc_cbparamdialogbase.cpp cbparamdialogbase.h 

moc_cbsimulator.cpp: $(MOC) cbsimulator.h
	$(MOC) cbsimulator.h -o moc_cbsimulator.cpp

moc_cbsimulatorGUI.cpp: $(MOC) cbsimulatorGUI.h
	$(MOC) cbsimulatorGUI.h -o moc_cbsimulatorGUI.cpp

moc_cbparamdialog.cpp: $(MOC) cbparamdialog.h
	$(MOC) cbparamdialog.h -o moc_cbparamdialog.cpp

moc_cbparamdialogbase.cpp: $(MOC) cbparamdialogbase.h
	$(MOC) cbparamdialogbase.h -o moc_cbparamdialogbase.cpp

####### Install

install: all  

uninstall:  

