#############################################################################
# Makefile for building: logplayer
# Generated by qmake (2.01a) (Qt 4.8.7) on: sex Nov 12 17:48:16 2021
# Project:  logplayer.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile logplayer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lpthread -lQtXml -lQtGui -lQtNetwork -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = cbbeacon.cpp \
		cbclient.cpp \
		cbgrid.cpp \
		cbgridhandler.cpp \
		cblab.cpp \
		cblabhandler.cpp \
		cbparameters.cpp \
		cbparamhandler.cpp \
		cbpoint.cpp \
		cbposition.cpp \
		cbreceptionhandler.cpp \
		cbreceptionist.cpp \
		cblogplayer.cpp \
		cbrobot.cpp \
		cbtarget.cpp \
		cbview.cpp \
		cbviewhandler.cpp \
		cbwall.cpp \
		cbloghandler.cpp \
		logplayer.cpp moc_cblogplayer.cpp
OBJECTS       = cbbeacon.o \
		cbclient.o \
		cbgrid.o \
		cbgridhandler.o \
		cblab.o \
		cblabhandler.o \
		cbparameters.o \
		cbparamhandler.o \
		cbpoint.o \
		cbposition.o \
		cbreceptionhandler.o \
		cbreceptionist.o \
		cblogplayer.o \
		cbrobot.o \
		cbtarget.o \
		cbview.o \
		cbviewhandler.o \
		cbwall.o \
		cbloghandler.o \
		logplayer.o \
		moc_cblogplayer.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		logplayer.pro
QMAKE_TARGET  = logplayer
DESTDIR       = 
TARGET        = logplayer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_logplayerGUI.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: logplayer.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile logplayer.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile logplayer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/logplayer1.0.0 || $(MKDIR) .tmp/logplayer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/logplayer1.0.0/ && $(COPY_FILE) --parents cbbeacon.h cbclient.h cbgrid.h cbgridhandler.h cblab.h cblabhandler.h cbparameters.h cbparamhandler.h cbpoint.h cbposition.h cbreceptionform.h cbreceptionhandler.h cbreceptionist.h cblogplayer.h cbrobot.h cbtarget.h cbview.h cbviewcommand.h cbviewhandler.h cbwall.h cbloghandler.h .tmp/logplayer1.0.0/ && $(COPY_FILE) --parents cbbeacon.cpp cbclient.cpp cbgrid.cpp cbgridhandler.cpp cblab.cpp cblabhandler.cpp cbparameters.cpp cbparamhandler.cpp cbpoint.cpp cbposition.cpp cbreceptionhandler.cpp cbreceptionist.cpp cblogplayer.cpp cbrobot.cpp cbtarget.cpp cbview.cpp cbviewhandler.cpp cbwall.cpp cbloghandler.cpp logplayer.cpp .tmp/logplayer1.0.0/ && $(COPY_FILE) --parents logplayerGUI.ui .tmp/logplayer1.0.0/ && (cd `dirname .tmp/logplayer1.0.0` && $(TAR) logplayer1.0.0.tar logplayer1.0.0 && $(COMPRESS) logplayer1.0.0.tar) && $(MOVE) `dirname .tmp/logplayer1.0.0`/logplayer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/logplayer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_cblogplayer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_cblogplayer.cpp
moc_cblogplayer.cpp: ui_logplayerGUI.h \
		cbrobot.h \
		cbposition.h \
		cbpoint.h \
		cblogplayer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) cblogplayer.h -o moc_cblogplayer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_logplayerGUI.h
compiler_uic_clean:
	-$(DEL_FILE) ui_logplayerGUI.h
ui_logplayerGUI.h: logplayerGUI.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic logplayerGUI.ui -o ui_logplayerGUI.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

cbbeacon.o: cbbeacon.cpp cbbeacon.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbbeacon.o cbbeacon.cpp

cbclient.o: cbclient.cpp cbclient.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbclient.o cbclient.cpp

cbgrid.o: cbgrid.cpp cbgrid.h \
		cbposition.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbgrid.o cbgrid.cpp

cbgridhandler.o: cbgridhandler.cpp cbgridhandler.h \
		cbposition.h \
		cbpoint.h \
		cbgrid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbgridhandler.o cbgridhandler.cpp

cblab.o: cblab.cpp cbbeacon.h \
		cbpoint.h \
		cbtarget.h \
		cbrobot.h \
		cbposition.h \
		cblab.h \
		cbwall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblab.o cblab.cpp

cblabhandler.o: cblabhandler.cpp cblabhandler.h \
		cbpoint.h \
		cbwall.h \
		cbbeacon.h \
		cbtarget.h \
		cblab.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblabhandler.o cblabhandler.cpp

cbparameters.o: cbparameters.cpp cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbparameters.o cbparameters.cpp

cbparamhandler.o: cbparamhandler.cpp cbparamhandler.h \
		cbparameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbparamhandler.o cbparamhandler.cpp

cbpoint.o: cbpoint.cpp cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbpoint.o cbpoint.cpp

cbposition.o: cbposition.cpp cbposition.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbposition.o cbposition.cpp

cbreceptionhandler.o: cbreceptionhandler.cpp cbreceptionhandler.h \
		cbview.h \
		cbclient.h \
		cbparameters.h \
		cbviewhandler.h \
		cbviewcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbreceptionhandler.o cbreceptionhandler.cpp

cbreceptionist.o: cbreceptionist.cpp cbreceptionist.h \
		cbreceptionform.h \
		cbreceptionhandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbreceptionist.o cbreceptionist.cpp

cblogplayer.o: cblogplayer.cpp cbposition.h \
		cbpoint.h \
		cbparameters.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbreceptionist.h \
		cbview.h \
		cbclient.h \
		cbviewhandler.h \
		cbviewcommand.h \
		cbgrid.h \
		cblogplayer.h \
		ui_logplayerGUI.h \
		cbrobot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cblogplayer.o cblogplayer.cpp

cbrobot.o: cbrobot.cpp cbrobot.h \
		cbposition.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbrobot.o cbrobot.cpp

cbtarget.o: cbtarget.cpp cbtarget.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbtarget.o cbtarget.cpp

cbview.o: cbview.cpp cbview.h \
		cbclient.h \
		cbparameters.h \
		cbviewhandler.h \
		cbviewcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbview.o cbview.cpp

cbviewhandler.o: cbviewhandler.cpp cbviewhandler.h \
		cbviewcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbviewhandler.o cbviewhandler.cpp

cbwall.o: cbwall.cpp cbwall.h \
		cbpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbwall.o cbwall.cpp

cbloghandler.o: cbloghandler.cpp cblabhandler.h \
		cbpoint.h \
		cbgridhandler.h \
		cbposition.h \
		cbgrid.h \
		cbparamhandler.h \
		cbparameters.h \
		cbloghandler.h \
		cbrobot.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cbloghandler.o cbloghandler.cpp

logplayer.o: logplayer.cpp cblogplayer.h \
		ui_logplayerGUI.h \
		cbrobot.h \
		cbposition.h \
		cbpoint.h \
		cbloghandler.h \
		cblab.h \
		cbwall.h \
		cbtarget.h \
		cbbeacon.h \
		cbgrid.h \
		cbparameters.h \
		cblabhandler.h \
		cbgridhandler.h \
		cbparamhandler.h \
		cbreceptionist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o logplayer.o logplayer.cpp

moc_cblogplayer.o: moc_cblogplayer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cblogplayer.o moc_cblogplayer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

